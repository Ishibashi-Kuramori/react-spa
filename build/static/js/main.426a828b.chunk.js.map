{"version":3,"sources":["pages/todo.js","pages/login.js","pages/register.js","App.js","reportWebVitals.js","index.js"],"names":["SortableItem","SortableElement","todo","sortIndex","onDeleteHandler","name","date","class","onClick","SortableList","SortableContainer","todos","map","index","Todo","props","onInput","e","setState","target","value","addTodo","state","obj","Date","toLocaleString","removeTodo","slice","onSortEnd","oldIndex","newIndex","arrayMove","this","href","src","alt","to","type","placeholder","length","title","Component","Login","Register","App","exact","path","component","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.426a828b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\n\r\nconst SortableItem = SortableElement(({todo, sortIndex, onDeleteHandler}) =>\r\n  <tr>\r\n    <td>{sortIndex + 1}</td>\r\n    <td>{todo.name}</td>\r\n    <td>{todo.date}</td>\r\n    <td>\r\n      <button class=\"button is-danger is-small\" onClick={() => { onDeleteHandler(sortIndex) }}>\r\n        <i class=\"far fa-trash-alt\"></i>&nbsp;削除\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nconst SortableList = SortableContainer(({todos, onDeleteHandler}) => {\r\n  return (\r\n    <tbody>\r\n      {todos.map((todo, index) => (\r\n        <SortableItem\r\n          key={index}\r\n          index={index}\r\n          sortIndex={index}\r\n          todo={todo}\r\n          onDeleteHandler={onDeleteHandler} />\r\n      ))}\r\n    </tbody>\r\n  );\r\n});\r\n\r\nexport default class Todo extends Component {\r\n\r\n  // コンストラクタ\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n      name: ''\r\n    };\r\n  }\r\n\r\n  // テキスト入力時\r\n  onInput = (e) => {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  // 登録ボタンクリック時\r\n  addTodo = () => {\r\n    const { todos, name } = this.state;\r\n    if(!name) return;\r\n    var obj = {\r\n      name: name,\r\n      date: new Date().toLocaleString()\r\n    }\r\n    this.setState({\r\n      todos: [...todos, obj]\r\n    });\r\n  }\r\n\r\n  // 削除ボタンクリック時\r\n  removeTodo = (index) => {\r\n    const { todos, name } = this.state;\r\n    this.setState({\r\n      todos: [...todos.slice(0, index), ...todos.slice(index + 1)]\r\n    });\r\n  }\r\n\r\n  // レコード並び替え時\r\n  onSortEnd = ({oldIndex, newIndex}) => {\r\n    this.setState(({todos}) => ({\r\n      todos: arrayMove(todos, oldIndex, newIndex),\r\n    }));\r\n  };\r\n\r\n  // TODO: navは別コンポーネントに移す\r\n  render() {\r\n    const { todos } = this.state;\r\n    return (<div>\r\n\r\n    <nav class=\"navbar has-shadow\">\r\n      <div class=\"container\">\r\n        <div class=\"navbar-brand\">\r\n          <a class=\"navbar-item\" href=\"../\">\r\n            <img src=\"http://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" />\r\n          </a>\r\n        </div>\r\n        <div class=\"navbar-end mr-0\">\r\n          <div class=\"navbar-item\">\r\n            <div class=\"field is-grouped\">\r\n              <p class=\"control\">\r\n                <Link to=\"/register\" class=\"button is-small\">\r\n                  <span class=\"icon mr-0\">\r\n                    <i class=\"fa fa-user-plus\"></i>\r\n                  </span>\r\n                  <span>\r\n                    Register\r\n                  </span>\r\n                </Link>\r\n              </p>\r\n              <p class=\"control\">\r\n                <Link to=\"/login\" class=\"button is-small is-info is-outlined\">\r\n                  <span class=\"icon mr-0\">\r\n                    <i class=\"fa fa-user\"></i>\r\n                  </span>\r\n                  <span>Login</span>\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <div class=\"hero is-info is-bold\">\r\n      <div class=\"hero-body\">\r\n        <div class=\"container\">\r\n          <h1 class=\"title\">Simple Todo List</h1>\r\n          <h2 class=\"subtitle\">@React & Bulma Practice By Ishibashi</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"columns\">\r\n      <div class=\"card column m-5\">\r\n        <div class=\"card-content\">\r\n          <div class=\"content\">\r\n\r\n            <div class=\"field has-addons\">\r\n              <div class=\"control\">\r\n                <input class=\"input\" type=\"text\" placeholder=\"TODOを入力\" onInput={this.onInput} />\r\n              </div>\r\n              <div class=\"control\">\r\n                <button class=\"button is-info\" onClick={this.addTodo}>\r\n                  <i class=\"far fa-edit\"></i>&nbsp;登録\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {todos.length > 0 &&\r\n              <table class=\"table is-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th><abbr title=\"Position\">No</abbr></th>\r\n                    <th><abbr title=\"Position\">Todo</abbr></th>\r\n                    <th><abbr title=\"Position\">Date</abbr></th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <SortableList\r\n                  todos={this.state.todos}\r\n                  onSortEnd={this.onSortEnd}\r\n                  onDeleteHandler={this.removeTodo} />\r\n              </table>\r\n            }\r\n            {todos.length == 0 &&\r\n              <div class=\"notification is-primary\">\r\n                TODO を入力して登録して下さい\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    </div>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Login extends Component {\r\n  render() {\r\n     return (\r\n      <div>\r\n        Login Page!!!<br />\r\n        <Link to=\"/\">Go To Top</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Register extends Component {\r\n  render() {\r\n     return (\r\n      <div>\r\n        Register Page!!!<br />\r\n        <Link to=\"/\">Go To Top</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Todo from './pages/todo';\r\nimport Login from './pages/login';\r\nimport Register from './pages/register';\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return(\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Todo} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}