{"version":3,"sources":["pages/todo.js","pages/login.js","pages/register.js","App.js","reportWebVitals.js","index.js"],"names":["SortableItem","SortableElement","todo","sortIndex","onDeleteHandler","name","date","className","onClick","SortableList","SortableContainer","todos","map","index","Todo","props","onInput","e","setState","target","value","addTodo","state","obj","Date","toLocaleString","removeTodo","slice","onSortEnd","oldIndex","newIndex","arrayMove","this","href","src","alt","to","type","placeholder","length","title","Component","Login","isSubmitEnabled","isLoginError","elements","handleFormChange","bind","handleFormSubmit","event","preventDefault","email","password","history","push","id","onChange","onSubmit","ref","el","autoComplete","required","minLength","disabled","Register","App","exact","path","component","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dc882a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\n\r\nconst SortableItem = SortableElement(({todo, sortIndex, onDeleteHandler}) =>\r\n  <tr>\r\n    <td>{sortIndex + 1}</td>\r\n    <td>{todo.name}</td>\r\n    <td>{todo.date}</td>\r\n    <td>\r\n      <button className=\"button is-danger is-small\" onClick={() => { onDeleteHandler(sortIndex) }}>\r\n        <i className=\"far fa-trash-alt\"></i>&nbsp;削除\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nconst SortableList = SortableContainer(({todos, onDeleteHandler}) => {\r\n  return (\r\n    <tbody>\r\n      {todos.map((todo, index) => (\r\n        <SortableItem\r\n          key={index}\r\n          index={index}\r\n          sortIndex={index}\r\n          todo={todo}\r\n          onDeleteHandler={onDeleteHandler} />\r\n      ))}\r\n    </tbody>\r\n  );\r\n});\r\n\r\nexport default class Todo extends Component {\r\n\r\n  // コンストラクタ\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n      name: ''\r\n    };\r\n  }\r\n\r\n  // テキスト入力時\r\n  onInput = (e) => {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  // 登録ボタンクリック時\r\n  addTodo = () => {\r\n    const { todos, name } = this.state;\r\n    if(!name) return;\r\n    var obj = {\r\n      name: name,\r\n      date: new Date().toLocaleString()\r\n    }\r\n    this.setState({\r\n      todos: [...todos, obj]\r\n    });\r\n  }\r\n\r\n  // 削除ボタンクリック時\r\n  removeTodo = (index) => {\r\n    const { todos } = this.state;\r\n    this.setState({\r\n      todos: [...todos.slice(0, index), ...todos.slice(index + 1)]\r\n    });\r\n  }\r\n\r\n  // レコード並び替え時\r\n  onSortEnd = ({oldIndex, newIndex}) => {\r\n    this.setState(({todos}) => ({\r\n      todos: arrayMove(todos, oldIndex, newIndex),\r\n    }));\r\n  };\r\n\r\n  // TODO: navは別コンポーネントに移す\r\n  render() {\r\n    const { todos } = this.state;\r\n    return (<div>\r\n\r\n    <nav className=\"navbar has-shadow\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-brand\">\r\n          <a className=\"navbar-item\" href=\"../\">\r\n            <img src=\"http://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-end mr-0\">\r\n          <div className=\"navbar-item\">\r\n            <div className=\"field is-grouped\">\r\n              <p className=\"control\">\r\n                <Link to=\"/register\" className=\"button is-small\">\r\n                  <span className=\"icon mr-0\">\r\n                    <i className=\"fa fa-user-plus\"></i>\r\n                  </span>\r\n                  <span>\r\n                    Register\r\n                  </span>\r\n                </Link>\r\n              </p>\r\n              <p className=\"control\">\r\n                <Link to=\"/login\" className=\"button is-small is-info is-outlined\">\r\n                  <span className=\"icon mr-0\">\r\n                    <i className=\"fa fa-user\"></i>\r\n                  </span>\r\n                  <span>Login</span>\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <div className=\"hero is-info is-bold\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">Simple Todo List</h1>\r\n          <h2 className=\"subtitle\">@React & Bulma Practice By Ishibashi</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"columns\">\r\n      <div className=\"card column m-5\">\r\n        <div className=\"card-content\">\r\n          <div className=\"content\">\r\n\r\n            <div className=\"field has-addons\">\r\n              <div className=\"control\">\r\n                <input className=\"input\" type=\"text\" placeholder=\"TODOを入力\" onInput={this.onInput} />\r\n              </div>\r\n              <div className=\"control\">\r\n                <button className=\"button is-info\" onClick={this.addTodo}>\r\n                  <i className=\"far fa-edit\"></i>&nbsp;登録\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {todos.length > 0 &&\r\n              <table className=\"table is-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th><abbr title=\"Position\">No</abbr></th>\r\n                    <th><abbr title=\"Position\">Todo</abbr></th>\r\n                    <th><abbr title=\"Position\">Date</abbr></th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <SortableList\r\n                  todos={this.state.todos}\r\n                  onSortEnd={this.onSortEnd}\r\n                  onDeleteHandler={this.removeTodo} />\r\n              </table>\r\n            }\r\n            {todos.length === 0 &&\r\n              <div className=\"notification is-primary\">\r\n                TODO を入力して登録して下さい\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    </div>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Login extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isSubmitEnabled: false,\r\n      isLoginError: false,\r\n    };\r\n\r\n    this.elements = null;\r\n\r\n    this.handleFormChange = this.handleFormChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  // フォーム入力時\r\n  handleFormChange() {\r\n    if(!this.elements) return;\r\n\r\n    this.setState({\r\n      isSubmitEnabled: this.elements['email'].value && this.elements['password'].value,\r\n      isLoginError: false,\r\n    });\r\n  }\r\n\r\n  // ログインボタン実行処理\r\n  handleFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // form値取得\r\n    const email = this.elements['email'].value;\r\n    const password = this.elements['password'].value;\r\n\r\n    // TODO: いずれ正式なログイン認証を実装する\r\n    if(email === 'a@a.com' && password === 'aaaa') {\r\n      this.props.history.push('/');\r\n    } else {\r\n      this.setState({\r\n        isLoginError: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n     return (\r\n    <section className=\"hero is-fullheight\" id=\"loginPage\">\r\n      <div className=\"hero-body has-text-centered\">\r\n        <div className=\"login\">\r\n          <h3 className=\"title has-text-black\">Login</h3>\r\n          <hr className=\"login-hr\" />\r\n          {!this.state.isLoginError &&\r\n            <p className=\"subtitle has-text-black\">Email & Passを入力して下さい</p>\r\n          }\r\n          {this.state.isLoginError &&\r\n            <p className=\"subtitle has-text-danger\">Email or Passをご確認下さい</p>\r\n          }\r\n          <form onChange={this.handleFormChange} onSubmit={this.handleFormSubmit} ref={el => this.elements = el && el.elements}>\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <input className=\"input is-medium is-rounded\" type=\"email\" name=\"email\" placeholder=\"hello@example.com\" autoComplete=\"username\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <input className=\"input is-medium is-rounded\" type=\"password\" name=\"password\" placeholder=\"**********\" autoComplete=\"current-password\" required minLength=\"4\"/>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <button className=\"button is-block is-fullwidth is-primary is-medium is-rounded\" type=\"submit\" disabled={!this.state.isSubmitEnabled}>\r\n              ログイン&nbsp;<i className=\"fas fa-sign-in-alt\"></i>\r\n            </button>\r\n          </form>\r\n          <br />\r\n          <nav className=\"level\">\r\n            <div className=\"level-item has-text-centered\">\r\n              <div>\r\n                <Link to=\"/register\">新規アカウント作成</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"level-item has-text-centered\">\r\n              <div>\r\n                <Link to=\"/\">戻る</Link>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      {this.state.isLoginError &&\r\n        <div className=\"notification is-warning\">\r\n          デバッグ用 Email: a@a.com  Pass: aaaa \r\n        </div>\r\n      }\r\n    </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Register extends Component {\r\n  render() {\r\n     return (\r\n      <div>\r\n        Register Page!!!<br />\r\n        <Link to=\"/\">Go To Top</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Todo from './pages/todo';\r\nimport Login from './pages/login';\r\nimport Register from './pages/register';\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return(\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Todo} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route component={Todo} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}